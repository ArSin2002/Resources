          CS - 403
SOFTWARE ENGINEERING
ASSIGNMENT – 4


Roll no: 
Name: 




Q1. What errors are commonly found during Unit Testing?
Some of the common error faced during unit testing -:
Functionality Errors: Functionality is a way the software is intended to behave.
Software has a functionality error if something that you expect it to do is hard, awkward, confusing, or impossible.
  
Communication Errors: These errors occur in communication from software to end-user. Anything that the end user needs to know in order to use the software should be made available on screen.
 
Missing command errors: This happens to occur when an expected Command is missing
 
Syntactic Error: Syntactic errors are misspelled words or grammatically incorrect sentences and are very evident while testing software GUI.
 
Error handling errors: Any errors that occur while the user is interacting with the software needs to be handled in a clear and meaningful manner. If not, it is called as an Error Handling Error.
 
     6) Calculation Errors:
     These errors occur due to any of the following reasons:
Bad logic
Incorrect formulae
Data type mismatch
Coding errors
Function call issues etc.
 
 
 
Q2. What problems may be encountered when Top-Down Integration is chosen?

Top down Integration testing is a part of incremental approach, in which the testing is done by joining two or more modules that are logically related. This process is usually carried out by using dummy programs called, Stubs and drivers and is used in order to stimulate the behaviour of the lower level modules that are not yet integrated.
In Top-Down integration testing, the testing takes place from top to bottom, following the control flow or architectural structure. Here, only the top module is unit tested in isolation, after which, the lower modules are integrated one by one.
Problems in Top Down Integration testing are as follows:
The basic functionality of the software is tested at the end of the cycle.
It requires many stubs.
Modules at the lower level tested inadequately.
 
Q3. What are the Steps in Bottom-Up Integration?

Bottom-up integration testing starts at the atomic modules level. Atomic modules are the lowest levels in the program structure. Since modules are integrated from the bottom up, processing required for modules that are subordinate to a given level is always available, so stubs are not required in this approach.
A bottom-up integration implemented with the following steps:
Low-level modules are combined into clusters that perform a specific software subfunction. These clusters are sometimes called builds.
 
A driver (a control program for testing) is written to coordinate test case input and output.

The build is tested.

Drivers are removed and clusters are combined moving upward in the program structure.
 
 
 
Q4. What is Regression Testing?
 
Regression testing is re-running functional and non-functional tests to ensure that previously developed and tested software still performs after a change. If not, that would be called a regression. Changes that may require regression testing include bug fixes, software enhancements, configuration changes, and even substitution of electronic components. As regression test suites tend to grow with each found defect, test automation is frequently involved. Sometimes a change impact analysis is performed to determine an appropriate subset of tests
 
The various regression testing techniques are:
Retest all
This technique checks all the test cases on the current program to check its integrity. Though it is expensive as it needs to re-run all the cases, it ensures that there are no errors because of the modified code. 
Regression test selection
Unlike Retest all, this technique runs a part of the test suite (owing to the cost of retest all) if the cost of selecting the part of the test suite is less than the Retest all technique. 
Test case prioritization
Prioritize the test cases so as to increase a test suite's rate of fault detection. Test case prioritization techniques schedule test cases so that the test cases that are higher in priority are executed before the test cases that have a lower priority. 
Types of test case prioritization
General prioritization – Prioritize test cases that will be beneficial on subsequent versions
Version-specific prioritization – Prioritize test cases with respect to a particular version of the software.
Hybrid
This technique is a hybrid of regression test selection and test case prioritization. 
 
Q5.What is Flow Graph Notation?

ans:-  Flow Graph is defined as a function in a program that can be represented as a control flow graph and the nodes in the flow 
graph are defined 
as program statements while the directed edges are the flow of control. A Flow Graph consists of nodes and edges. The two nodes in the Flow Graph can be either
 unconnected or connected by an edge in either direction or connected by an edge in all directions.

While tracing a path from a source to a sink a back edge is an edge that leads back to a node that has already been visited. 
The Flow Graph contains one source node and one sink.
A source node is the node that has no incoming edges while a sink node is the node with no outgoing edges. A program's function
 may contain more than one sink node, but this graph 
can be converted into a graph with only one sink. There are some languages that allow more than one source. This construct is 
very rare and not used in Structured Programming.




Q6. List out the possible errors of Black Box Testing?




ans :- Black box testing is the software testing method which is used to test the software without knowing the internal structure of a code or program. There are various techniques used to test the code under black-box testing for finding various types of errors. This method attempts to find errors in the following categories:

    Incorrect or missing function.

    Interface errors.

    Errors in data structures or external database access.

    Behavior or performance errors.

    Initialization and termination errors.

Following are the different testing techniques which covers the above error categories.

A] Boundary value analysis (BVA)

Boundary value analysis is the most commonly used test case design method for black box testing. As all we know the most of errors 
occurs at boundary of the input values. This is one of the techniques used to find the error in the boundaries of input values rather 
than the center of the input value range.

B] Equivalence class partitioning

The equivalence class partitioning is the black-box test case design technique used for writing test cases. This approach is used 
to reduce huge set of possible inputs to small but equally effective inputs. This type of method is used to find errors in the data 
structure and can test the complete set of program in partition.

 
 
 
Q7. What is Flow Graph Notation?
In order to compute logical complexity measure, V(G), of a code, testers perform the basis path testing. The value of V(G), defines the maximum number of test cases to be designed by identifying basis set of execution paths to ensure that all statements are executed at least once.
The process begins with the construction of the flow graph from the source code or flow charts.
 
Standard notations used in constructing a flow graph are as under
1) To indicate a Sequence:
 

2) To indicate �IF � THEN � ELSE�:
 

3) To indicate a �WHILE� Loop:
 

4) To indicate a �Repeat � Until� Loop:
 

5) To indicate a �SWITCH� Statement:
 

6) To indicate a Post Test �FOR� Loop:

 
7) To indicate Pre Test �FOR� Loop:
 

 
Q8. List out the possible errors of Black Box Testing?
 
BLACK BOX TESTING, also known as Behaverial Testing, is a software testing method in which the internal structure/design/implementation of the item being tested is not known to the tester. These tests can be functional or non-functional, though usually functional.

This method is named so because the software program, in the eyes of the tester, is like a black box; inside which one cannot see. This method attempts to find errors in the following categories:
Incorrect or missing functions
Interface errors
Errors in data structures or external database access
Behavior or performance errors
Initialization and termination errors
 
 
 
 
 
 
 
 
Q9. Differentiate between Flow chart and Data Flow Diagram (DFD).   Draw a DFD representing student registration in next Semester.
 
 
 
 
 
            FLOW CHART
        DATA FLOW DIAGRAM
1.flow of control.
2.processes execute one at a time.
3.flow of data through an information processing system.
4.physical aspect of the action.
5.view of the system at a high level.
6.does not have any input from or output to external source.
1.flow of data.
2.process can operate in parallel.

3.flow of data through business processes.
4.logical aspect of the action.
5.view of the system at the lower
Level.
6.have input from and output to external source to internal store or vice versa.


 
 
 
 
 
 
 
 
 
Q10.  Explain Alpha testing and Beta testing.
ALPHA TESTING -: Alpha Testing is defined as a type of software testing performed to identify bugs before releasing the product to real users or the public. It is a type of acceptance testing.  This testing is referred to as an alpha testing only because it is done early on, near the end of the development of the software. The main objective of alpha testing is to refine the software product by finding (and fixing) the bugs that were not discovered through previous tests.
Alpha testing is typically performed by in-house software engineers or QA staff. It is the final testing stage before the software is released into the real world.
 
BETA TESTING -: Beta Testing is one of the Acceptance Testing types, which adds value to the product as the end-user (intended real user) validates the product for functionality, usability, reliability, and compatibility.
Inputs provided by the end-users helps in enhancing the quality of the product further and leads to its success. This also helps in decision making to invest further in the future products or the same product for improvisation.
Since Beta Testing happens at the end user’s side, it cannot be the controlled activity. 
 
 
 
 
 
 
 
